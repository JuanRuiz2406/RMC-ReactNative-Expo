{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Front-End-RMC-Expo\\\\components\\\\screens\\\\loginScreen.js\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useForm } from \"react-hook-form\";\nimport { TextInput } from \"../hook-form/index\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { AuthContainer } from \"../loginComponents/authContainer\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../ComponetsLogin/Background\";\nimport Logo from \"../ComponetsLogin/Logo\";\nimport Header from \"../ComponetsLogin/Header\";\nimport Button from \"../ComponetsLogin/Button\";\nimport BackButton from \"../ComponetsLogin/BackButton\";\nimport { theme } from \"../core/theme\";\nexport default function LoginScreen(_ref) {\n  var _errors$email, _errors$password;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login,\n      loginWithGoogle = _useContext.loginWithGoogle,\n      loginWithFacebook = _useContext.loginWithFacebook;\n\n  var onSubmitLogin = function onSubmitLogin(data) {\n    console.log(data);\n    reset({\n      email: \"\",\n      password: \"\",\n      token: \"\"\n    });\n    fetch(\"http://192.168.0.8:8080/auth/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      login(responseJson.email, data.email, responseJson.token);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  console.log(errors);\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Bienvenido de nuevo\"), React.createElement(AuthContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    title: \"Correo Electr\\xF3nico\",\n    control: control,\n    isPassword: false,\n    name: \"email\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*El Correo Electrónico es obligatorio*\"\n      },\n      pattern: {\n        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n        message: \"*El Correo Electrónico debe tener un formato válido*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$email = errors.email) == null ? void 0 : _errors$email.message,\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Contrase\\xF1a\",\n    control: control,\n    isPassword: true,\n    name: \"password\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*La Contraseña es obligatoria*\"\n      },\n      minLength: {\n        value: 8,\n        message: \"*La Contraseña debe tener 8 caracteres mínimo*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$password = errors.password) == null ? void 0 : _errors$password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Olvido su contrase\\xF1a?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit(onSubmitLogin),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return loginWithGoogle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Google\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: function onPress() {\n      return loginWithFacebook();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Facebook\"))));\n}\nvar styles = StyleSheet.create({\n  title: {\n    marginBottom: 48,\n    textAlign: \"center\"\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  buttonTextGoogle: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#FF0A0A\",\n    fontWeight: \"bold\"\n  },\n  buttonTextFacebook: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#0A5CFF\",\n    fontWeight: \"bold\"\n  },\n  RegisterButton: {\n    marginVertical: 32\n  },\n  scrollView: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    backgroundColor: \"white\"\n  },\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Front-End-RMC-Expo/components/screens/loginScreen.js"],"names":["React","useContext","useForm","TextInput","ScrollView","AuthContainer","AuthContext","Text","Background","Logo","Header","Button","BackButton","theme","LoginScreen","navigation","handleSubmit","control","reset","errors","login","loginWithGoogle","loginWithFacebook","onSubmitLogin","data","console","log","email","password","token","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","catch","error","goBack","required","value","message","pattern","minLength","styles","forgotPassword","navigate","forgot","StyleSheet","create","title","marginBottom","textAlign","buttonText","fontSize","color","fontWeight","buttonTextGoogle","buttonTextFacebook","RegisterButton","marginVertical","scrollView","width","Dimensions","get","height","backgroundColor","alignItems","row","flexDirection","marginTop","colors","secondary","link","primary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAOA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,aAAT;AACA,SAASC,WAAT;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AAEA,eAAe,SAASC,WAAT,OAAqC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,iBACDb,OAAO,EADN;AAAA,MAC1Cc,YAD0C,YAC1CA,YAD0C;AAAA,MAC5BC,OAD4B,YAC5BA,OAD4B;AAAA,MACnBC,KADmB,YACnBA,KADmB;AAAA,MACZC,MADY,YACZA,MADY;;AAAA,oBAEIlB,UAAU,CAACK,WAAD,CAFd;AAAA,MAE1Cc,KAF0C,eAE1CA,KAF0C;AAAA,MAEnCC,eAFmC,eAEnCA,eAFmC;AAAA,MAElBC,iBAFkB,eAElBA,iBAFkB;;AAIlD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAN,IAAAA,KAAK,CAAC;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAAD,CAAL;AAMAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFiC;AAM1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA,KAAK,EAAEH,IAAI,CAACG,KADO;AAEnBC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAFI,OAAf;AANoC,KAAvC,CAAL,CAWGS,IAXH,CAWQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAXR,EAYGF,IAZH,CAYQ,UAACG,YAAD,EAAkB;AACtBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,YAAZ;AACApB,MAAAA,KAAK,CAACoB,YAAY,CAACb,KAAd,EAAqBH,IAAI,CAACG,KAA1B,EAAiCa,YAAY,CAACX,KAA9C,CAAL;AACD,KAfH,EAgBGY,KAhBH,CAgBS,UAACC,KAAD,EAAW;AAChBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD,KAlBH;AAmBD,GA5BD;;AA8BAjB,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,UAAU,CAAC4B,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,uBADR;AAEE,IAAA,OAAO,EAAE1B,OAFX;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAE;AACL2B,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,IADC;AAERC,QAAAA,OAAO,EAAE;AAFD,OADL;AAKLC,MAAAA,OAAO,EAAE;AACPF,QAAAA,KAAK,EAAE,4BADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AALJ,KALT;AAeE,IAAA,YAAY,EAAC,EAff;AAgBE,IAAA,YAAY,EAAE3B,MAAF,qCAAEA,MAAM,CAAEQ,KAAV,qBAAE,cAAemB,OAhB/B;AAiBE,IAAA,gBAAgB,EAAC,OAjBnB;AAkBE,IAAA,eAAe,EAAC,cAlBlB;AAmBE,IAAA,YAAY,EAAC,eAnBf;AAoBE,IAAA,aAAa,EAAC,MApBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAuBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAE7B,OAFX;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAE;AACL2B,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,IADC;AAERC,QAAAA,OAAO,EAAE;AAFD,OADL;AAKLE,MAAAA,SAAS,EAAE;AACTH,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AALN,KALT;AAeE,IAAA,YAAY,EAAC,EAff;AAgBE,IAAA,YAAY,EAAE3B,MAAF,wCAAEA,MAAM,CAAES,QAAV,qBAAE,iBAAkBkB,OAhBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EAyCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMnC,UAAU,CAACoC,QAAX,CAAoB,qBAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,CADF,CAzCF,EAiDE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEpC,YAAY,CAACO,aAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjDF,EAoDE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMF,eAAe,EAArB;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApDF,EAuDE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMC,iBAAiB,EAAvB;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvDF,CAJF,CADF,CADF;AAoED;AAED,IAAM2B,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,SAAS,EAAE;AAFN,GADwB;AAK/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVF,IAAAA,SAAS,EAAE,QAFD;AAGVG,IAAAA,KAAK,EAAE,MAHG;AAIVC,IAAAA,UAAU,EAAE;AAJF,GALmB;AAW/BC,EAAAA,gBAAgB,EAAE;AAChBH,IAAAA,QAAQ,EAAE,EADM;AAEhBF,IAAAA,SAAS,EAAE,QAFK;AAGhBG,IAAAA,KAAK,EAAE,SAHS;AAIhBC,IAAAA,UAAU,EAAE;AAJI,GAXa;AAiB/BE,EAAAA,kBAAkB,EAAE;AAClBJ,IAAAA,QAAQ,EAAE,EADQ;AAElBF,IAAAA,SAAS,EAAE,QAFO;AAGlBG,IAAAA,KAAK,EAAE,SAHW;AAIlBC,IAAAA,UAAU,EAAE;AAJM,GAjBW;AAuB/BG,EAAAA,cAAc,EAAE;AACdC,IAAAA,cAAc,EAAE;AADF,GAvBe;AA0B/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KADtB;AAEVG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAFvB;AAGVC,IAAAA,eAAe,EAAE;AAHP,GA1BmB;AA+B/BrB,EAAAA,cAAc,EAAE;AACdiB,IAAAA,KAAK,EAAE,MADO;AAEdK,IAAAA,UAAU,EAAE,UAFE;AAGdhB,IAAAA,YAAY,EAAE;AAHA,GA/Be;AAoC/BiB,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GApC0B;AAwC/BvB,EAAAA,MAAM,EAAE;AACNO,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAE/C,KAAK,CAAC+D,MAAN,CAAaC;AAFd,GAxCuB;AA4C/BC,EAAAA,IAAI,EAAE;AACJjB,IAAAA,UAAU,EAAE,MADR;AAEJD,IAAAA,KAAK,EAAE/C,KAAK,CAAC+D,MAAN,CAAaG;AAFhB;AA5CyB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  View,\r\n} from \"react-native\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextInput } from \"../hook-form/index\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { AuthContainer } from \"../loginComponents/authContainer\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../ComponetsLogin/Background'\r\nimport Logo from '../ComponetsLogin/Logo'\r\nimport Header from '../ComponetsLogin/Header'\r\nimport Button from '../ComponetsLogin/Button'\r\nimport BackButton from '../ComponetsLogin/BackButton'\r\nimport { theme } from '../core/theme'\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const { handleSubmit, control, reset, errors } = useForm();\r\n  const { login, loginWithGoogle, loginWithFacebook } = useContext(AuthContext);\r\n\r\n  const onSubmitLogin = (data) => {\r\n    console.log(data);\r\n\r\n    reset({\r\n      email: \"\",\r\n      password: \"\",\r\n      token: \"\",\r\n    });\r\n\r\n    fetch(\"http://192.168.0.8:8080/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: data.email,\r\n        password: data.password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        login(responseJson.email, data.email, responseJson.token);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Background>\r\n        <BackButton goBack={navigation.goBack} />\r\n        <Logo />\r\n        <Header>Bienvenido de nuevo</Header>\r\n        <AuthContainer>\r\n          <TextInput\r\n            title=\"Correo Electrónico\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"email\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*El Correo Electrónico es obligatorio*\",\r\n              },\r\n              pattern: {\r\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                message: \"*El Correo Electrónico debe tener un formato válido*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.email?.message}\r\n            autoCompleteType=\"email\"\r\n            textContentType=\"emailAddress\"\r\n            keyboardType=\"email-address\"\r\n            returnKeyType=\"next\"\r\n          />\r\n          <TextInput\r\n            title=\"Contraseña\"\r\n            control={control}\r\n            isPassword={true}\r\n            name=\"password\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*La Contraseña es obligatoria*\",\r\n              },\r\n              minLength: {\r\n                value: 8,\r\n                message: \"*La Contraseña debe tener 8 caracteres mínimo*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.password?.message}\r\n          />\r\n          <View style={styles.forgotPassword}>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate('ResetPasswordScreen')}\r\n            >\r\n              <Text style={styles.forgot}>Olvido su contraseña?</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <Button mode=\"contained\" onPress={handleSubmit(onSubmitLogin)}>\r\n            Login\r\n            </Button>\r\n          <Button mode=\"outlined\" onPress={() => loginWithGoogle()}>\r\n            Google\r\n            </Button>\r\n          <Button mode=\"outlined\" onPress={() => loginWithFacebook()}>\r\n            Facebook\r\n            </Button>\r\n        </AuthContainer>\r\n      </Background>\r\n    </ScrollView >\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    marginBottom: 48,\r\n    textAlign: \"center\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#000\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonTextGoogle: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#FF0A0A\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonTextFacebook: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#0A5CFF\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  RegisterButton: {\r\n    marginVertical: 32,\r\n  },\r\n  scrollView: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n    backgroundColor: \"white\",\r\n  },\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}