{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Front-End-RMC-Expo\\\\components\\\\hook-form\\\\picker.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Controller } from \"react-hook-form\";\nimport { Picker } from \"@react-native-picker/picker\";\nexport default (function (_ref) {\n  var title = _ref.title,\n      control = _ref.control,\n      name = _ref.name,\n      error = _ref.error,\n      errorMessage = _ref.errorMessage,\n      pickerOptions = _ref.pickerOptions;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerSelectedOption = _useState2[0],\n      setPickerSelectedOption = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, title), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(Picker, {\n        onBlur: onBlur,\n        selectedValue: pickerSelectedOption,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemPosition) {\n          onChange(itemValue);\n          setPickerSelectedOption(itemValue);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Seleccione...\",\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), pickerOptions.map(function (item) {\n        return React.createElement(Picker.Item, {\n          key: item,\n          label: item,\n          value: item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }\n        });\n      }));\n    },\n    name: name,\n    defaultValue: pickerSelectedOption,\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), error && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, errorMessage));\n});\nvar styles = StyleSheet.create({\n  label: {\n    margin: 20,\n    marginTop: 25,\n    marginLeft: 40,\n    fontSize: 18\n  },\n  errorMessage: {\n    marginLeft: 35,\n    fontSize: 12\n  },\n  picker: {\n    backgroundColor: \"white\",\n    borderRadius: 4,\n    borderWidth: 1,\n    height: 50,\n    marginLeft: 30,\n    marginRight: 30\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Front-End-RMC-Expo/components/hook-form/picker.js"],"names":["React","useState","Controller","Picker","title","control","name","error","errorMessage","pickerOptions","pickerSelectedOption","setPickerSelectedOption","styles","label","onChange","onBlur","value","picker","itemValue","itemPosition","map","item","required","StyleSheet","create","margin","marginTop","marginLeft","fontSize","backgroundColor","borderRadius","borderWidth","height","marginRight"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,gBAAe,gBAOT;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,aACI,QADJA,aACI;;AAAA,kBACoDR,QAAQ,CAAC,EAAD,CAD5D;AAAA;AAAA,MACGS,oBADH;AAAA,MACyBC,uBADzB;;AAGJ,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BT,KAA5B,CADF,EAEE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,MAAM,EAAE;AAAA,UAAGS,QAAH,SAAGA,QAAH;AAAA,UAAaC,MAAb,SAAaA,MAAb;AAAA,UAAqBC,KAArB,SAAqBA,KAArB;AAAA,aACN,oBAAC,MAAD;AACE,QAAA,MAAM,EAAED,MADV;AAEE,QAAA,aAAa,EAAEL,oBAFjB;AAGE,QAAA,KAAK,EAAEE,MAAM,CAACK,MAHhB;AAIE,QAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,YAAZ,EAA6B;AAC1CL,UAAAA,QAAQ,CAACI,SAAD,CAAR;AACAP,UAAAA,uBAAuB,CAACO,SAAD,CAAvB;AACD,SAPH;AAQE,QAAA,KAAK,EAAEF,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,eAAnB;AAAmC,QAAA,KAAK,EAAC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAYGP,aAAa,CAACW,GAAd,CAAkB,UAACC,IAAD;AAAA,eACjB,oBAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,GAAG,EAAEA,IAAlB;AAAwB,UAAA,KAAK,EAAEA,IAA/B;AAAqC,UAAA,KAAK,EAAEA,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,OAAlB,CAZH,CADM;AAAA,KAFV;AAoBE,IAAA,IAAI,EAAEf,IApBR;AAqBE,IAAA,YAAY,EAAEI,oBArBhB;AAsBE,IAAA,KAAK,EAAE;AAAEY,MAAAA,QAAQ,EAAE;AAAZ,KAtBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EA0BGf,KAAK,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACJ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,YAAnC,CA1BZ,CADF;AA8BD,CAxCD;AA0CA,IAAMI,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,UAAU,EAAE,EAHP;AAILC,IAAAA,QAAQ,EAAE;AAJL,GADwB;AAO/BpB,EAAAA,YAAY,EAAE;AACZmB,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAPiB;AAW/BX,EAAAA,MAAM,EAAE;AACNY,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,YAAY,EAAE,CAFR;AAGNC,IAAAA,WAAW,EAAE,CAHP;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNL,IAAAA,UAAU,EAAE,EALN;AAMNM,IAAAA,WAAW,EAAE;AANP;AAXuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text } from \"react-native\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nexport default ({\r\n  title,\r\n  control,\r\n  name,\r\n  error,\r\n  errorMessage,\r\n  pickerOptions,\r\n}) => {\r\n  const [pickerSelectedOption, setPickerSelectedOption] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <Text style={styles.label}>{title}</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <Picker\r\n            onBlur={onBlur}\r\n            selectedValue={pickerSelectedOption}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue, itemPosition) => {\r\n              onChange(itemValue);\r\n              setPickerSelectedOption(itemValue);\r\n            }}\r\n            value={value}\r\n          >\r\n            <Picker.Item label=\"Seleccione...\" value=\"\" />\r\n\r\n            {pickerOptions.map((item) => (\r\n              <Picker.Item key={item} label={item} value={item} />\r\n            ))}\r\n          </Picker>\r\n        )}\r\n        name={name}\r\n        defaultValue={pickerSelectedOption}\r\n        rules={{ required: true }}\r\n      />\r\n      {error && <Text style={styles.errorMessage}>{errorMessage}</Text>}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    margin: 20,\r\n    marginTop: 25,\r\n    marginLeft: 40,\r\n    fontSize: 18,\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 35,\r\n    fontSize: 12,\r\n  },\r\n  picker: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n    height: 50,\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}