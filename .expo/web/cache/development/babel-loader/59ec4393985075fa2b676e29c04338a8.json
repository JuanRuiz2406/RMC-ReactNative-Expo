{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Front-End-RMC-Expo\\\\components\\\\screens\\\\map.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { requestPermissionsAsync, getCurrentPositionAsync } from \"expo-location\";\nimport { useRoute } from \"@react-navigation/native\";\nexport default (function (_ref) {\n  var goBack = _ref.navigation.goBack;\n  var route = useRoute();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMarker = _useState2[0],\n      setShowMarker = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      settingLatitude = _useState4[0],\n      setSettingLatitude = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      settingLongitude = _useState6[0],\n      setSettingLongitude = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$requestPermiss, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n            case 2:\n              _await$requestPermiss = _context.sent;\n              status = _await$requestPermiss.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Error\", \"No se pudo acceder a los permisos de ubicación, no podrás hacer reportes.\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setSettingLatitude(location.coords.latitude);\n              setSettingLongitude(location.coords.longitude);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var chooseActualCoordenates = function chooseActualCoordenates() {\n    setShowMarker(false);\n    chooseLocation();\n  };\n\n  var handleLongPress = function handleLongPress(_ref2) {\n    var nativeEvent;\n    return _regeneratorRuntime.async(function handleLongPress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            nativeEvent = _ref2.nativeEvent;\n            setSettingLatitude(nativeEvent.coordinate.latitude);\n            setSettingLongitude(nativeEvent.coordinate.longitude);\n            setShowMarker(true);\n            console.log(settingLatitude, settingLongitude);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var chooseLocation = function chooseLocation() {\n    route.params.setLatitude(settingLatitude);\n    route.params.setLongitude(settingLongitude);\n    console.log(settingLatitude, settingLongitude);\n    goBack();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    showsUserLocation: true,\n    region: {\n      latitude: settingLatitude,\n      longitude: settingLongitude,\n      latitudeDelta: 0.009,\n      longitudeDelta: 0.009\n    },\n    onLongPress: handleLongPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, showMarker ? React.createElement(Marker, {\n    coordinate: {\n      latitude: settingLatitude,\n      longitude: settingLongitude\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }) : null), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: chooseActualCoordenates,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Enviar Mi Ubicaci\\xF3n Actual\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: chooseLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Enviar Punto Seleccionado\")));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height - 255\n  },\n  button: {\n    backgroundColor: \"#008652\",\n    padding: 7,\n    width: Dimensions.get(\"window\").width,\n    marginBottom: 5,\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"black\"\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Front-End-RMC-Expo/components/screens/map.js"],"names":["React","useState","useEffect","MapView","Marker","requestPermissionsAsync","getCurrentPositionAsync","useRoute","goBack","navigation","route","showMarker","setShowMarker","settingLatitude","setSettingLatitude","settingLongitude","setSettingLongitude","status","Alert","alert","location","coords","latitude","longitude","chooseActualCoordenates","chooseLocation","handleLongPress","nativeEvent","coordinate","console","log","params","setLatitude","setLongitude","styles","container","map","latitudeDelta","longitudeDelta","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height","padding","marginBottom","borderWidth","borderRadius","borderColor","fontSize","textAlign","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  Text,\r\n  Alert,\r\n} from \"react-native\";\r\nimport {\r\n  requestPermissionsAsync,\r\n  getCurrentPositionAsync,\r\n} from \"expo-location\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\nexport default ({ navigation: { goBack } }) => {\r\n  const route = useRoute();\r\n\r\n  const [showMarker, setShowMarker] = useState(false);\r\n  const [settingLatitude, setSettingLatitude] = useState(0);\r\n  const [settingLongitude, setSettingLongitude] = useState(0);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await requestPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        Alert.alert(\r\n          \"Error\",\r\n          \"No se pudo acceder a los permisos de ubicación, no podrás hacer reportes.\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      let location = await getCurrentPositionAsync({});\r\n      setSettingLatitude(location.coords.latitude);\r\n      setSettingLongitude(location.coords.longitude);\r\n    })();\r\n  }, []);\r\n\r\n  const chooseActualCoordenates = () => {\r\n    setShowMarker(false);\r\n    chooseLocation();\r\n  };\r\n\r\n  const handleLongPress = async ({ nativeEvent }) => {\r\n    setSettingLatitude(nativeEvent.coordinate.latitude);\r\n    setSettingLongitude(nativeEvent.coordinate.longitude);\r\n\r\n    setShowMarker(true);\r\n\r\n    console.log(settingLatitude, settingLongitude);\r\n  };\r\n\r\n  const chooseLocation = () => {\r\n    route.params.setLatitude(settingLatitude);\r\n    route.params.setLongitude(settingLongitude);\r\n\r\n    console.log(settingLatitude, settingLongitude);\r\n\r\n    goBack();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        showsUserLocation\r\n        region={{\r\n          latitude: settingLatitude,\r\n          longitude: settingLongitude,\r\n          latitudeDelta: 0.009,\r\n          longitudeDelta: 0.009,\r\n        }}\r\n        onLongPress={handleLongPress}\r\n      >\r\n        {showMarker ? (\r\n          <Marker\r\n            coordinate={{\r\n              latitude: settingLatitude,\r\n              longitude: settingLongitude,\r\n            }}\r\n          />\r\n        ) : null}\r\n      </MapView>\r\n\r\n      <TouchableOpacity style={styles.button} onPress={chooseActualCoordenates}>\r\n        <Text style={styles.buttonText}>Enviar Mi Ubicación Actual</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity style={styles.button} onPress={chooseLocation}>\r\n        <Text style={styles.buttonText}>Enviar Punto Seleccionado</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  map: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height - 255,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#008652\",\r\n    padding: 7,\r\n    width: Dimensions.get(\"window\").width,\r\n    marginBottom: 5,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    borderColor: \"black\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}