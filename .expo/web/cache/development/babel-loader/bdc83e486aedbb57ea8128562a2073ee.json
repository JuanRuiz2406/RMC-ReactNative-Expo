{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Front-End-RMC-Expo\\\\components\\\\screens\\\\registerScreen.js\";\nimport React, { useContext } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AuthContainer } from \"../loginComponents/authContainer\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { useForm } from \"react-hook-form\";\nimport { TextInput } from \"../hook-form/index\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Text } from \"react-native-paper\";\nimport Background from \"../ComponetsLogin/Background\";\nimport Logo from \"../ComponetsLogin/Logo\";\nimport Header from \"../ComponetsLogin/Header\";\nimport Button from \"../ComponetsLogin/Button\";\nimport BackButton from \"../ComponetsLogin/BackButton\";\nimport { theme } from \"../core/theme\";\nexport default function RegisterScreen(_ref) {\n  var _errors$name, _errors$lastName, _errors$idCard, _errors$email, _errors$password, _errors$direction;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var _useContext = useContext(AuthContext),\n      register = _useContext.register;\n\n  var onSubmitRegister = function onSubmitRegister(data) {\n    console.log(data);\n    reset({\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      lastName: \"\",\n      direction: \"\"\n    });\n    console.log(data);\n    fetch(\"http://192.168.0.8:8080/auth/new\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        direction: data.direction,\n        email: data.email,\n        idCard: data.idCard,\n        lastName: data.lastName,\n        name: data.name,\n        password: data.password,\n        role: \"user\"\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson.code);\n\n      if (responseJson.code == 201) {\n        fetch(\"http://192.168.0.8:8080/auth/login\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: data.email,\n            password: data.password\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseJsonLogin) {\n          register(responseJsonLogin.email, responseJsonLogin.token);\n        });\n      } else {\n        console.log(\"Error al registrar usuario, cheque los campos\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Crea una cuenta\"), React.createElement(AuthContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    title: \"Nombre\",\n    control: control,\n    isPassword: false,\n    name: \"name\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*El Nombre es obligatorio*\"\n      },\n      pattern: {\n        value: /^[a-zA-Z\\s]*$/,\n        message: \"*El Nombre solo puede tener letras*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$name = errors.name) == null ? void 0 : _errors$name.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Apellido\",\n    control: control,\n    isPassword: false,\n    name: \"lastName\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*El Apellido es obligatorio*\"\n      },\n      pattern: {\n        value: /^[a-zA-Z\\s]*$/,\n        message: \"*El Apellido solo puede tener letras*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$lastName = errors.lastName) == null ? void 0 : _errors$lastName.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Identificacion\",\n    control: control,\n    isPassword: false,\n    name: \"idCard\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*La Cédula es obligatoria*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$idCard = errors.idCard) == null ? void 0 : _errors$idCard.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Correo Electr\\xF3nico\",\n    control: control,\n    isPassword: false,\n    name: \"email\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*El Correo Electrónico es obligatorio*\"\n      },\n      pattern: {\n        value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n        message: \"*El Correo Electrónico debe tener un formato válido*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$email = errors.email) == null ? void 0 : _errors$email.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Contrase\\xF1a\",\n    control: control,\n    isPassword: true,\n    name: \"password\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*La Contraseña es obligatoria*\"\n      },\n      minLength: {\n        value: 8,\n        message: \"*La Contraseña debe tener 8 caracteres mínimo*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$password = errors.password) == null ? void 0 : _errors$password.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    title: \"Direcci\\xF3n\",\n    control: control,\n    isPassword: false,\n    name: \"direction\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*La Dirección es obligatoria*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$direction = errors.direction) == null ? void 0 : _errors$direction.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSubmit(onSubmitRegister),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Registrar\"))));\n}\nvar styles = StyleSheet.create({\n  input: {\n    marginVertical: 8\n  },\n  title: {\n    marginBottom: 48,\n    textAlign: \"center\"\n  },\n  RegisterButton: {\n    marginVertical: 32\n  },\n  closeIcon: {\n    position: \"absolute\",\n    top: 60,\n    right: 16\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#000\",\n    fontWeight: \"bold\"\n  },\n  scrollView: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Front-End-RMC-Expo/components/screens/registerScreen.js"],"names":["React","useContext","AuthContainer","AuthContext","useForm","TextInput","ScrollView","Text","Background","Logo","Header","Button","BackButton","theme","RegisterScreen","navigation","handleSubmit","control","reset","errors","register","onSubmitRegister","data","console","log","email","password","name","lastName","direction","fetch","method","headers","Accept","body","JSON","stringify","idCard","role","then","response","json","responseJson","code","responseJsonLogin","token","catch","error","goBack","required","value","message","pattern","minLength","styles","StyleSheet","create","input","marginVertical","title","marginBottom","textAlign","RegisterButton","closeIcon","position","top","right","buttonText","fontSize","color","fontWeight","scrollView","width","Dimensions","get","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Alert, StyleSheet, Dimensions } from \"react-native\";\r\nimport { AuthContainer } from \"../loginComponents/authContainer\";\r\nimport { AuthContext } from \"../contexts/authContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextInput } from \"../hook-form/index\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nimport { Text } from \"react-native-paper\";\r\nimport Background from \"../ComponetsLogin/Background\";\r\nimport Logo from \"../ComponetsLogin/Logo\";\r\nimport Header from \"../ComponetsLogin/Header\";\r\nimport Button from \"../ComponetsLogin/Button\";\r\nimport BackButton from \"../ComponetsLogin/BackButton\";\r\nimport { theme } from \"../core/theme\";\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const { handleSubmit, control, reset, errors } = useForm();\r\n  const { register } = useContext(AuthContext);\r\n\r\n  const onSubmitRegister = (data) => {\r\n    console.log(data);\r\n\r\n    reset({\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      lastName: \"\",\r\n      direction: \"\",\r\n    });\r\n    console.log(data);\r\n    fetch(\"http://192.168.0.8:8080/auth/new\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        direction: data.direction,\r\n        email: data.email,\r\n        idCard: data.idCard,\r\n        lastName: data.lastName,\r\n        name: data.name,\r\n        password: data.password,\r\n        role: \"user\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        console.log(responseJson.code);\r\n        if (responseJson.code == 201) {\r\n          fetch(\"http://192.168.0.8:8080/auth/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: data.email,\r\n              password: data.password,\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((responseJsonLogin) => {\r\n              register(responseJsonLogin.email, responseJsonLogin.token);\r\n            });\r\n        } else {\r\n          console.log(\"Error al registrar usuario, cheque los campos\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Background>\r\n        <BackButton goBack={navigation.goBack} />\r\n        <Logo />\r\n        <Header>Crea una cuenta</Header>\r\n        <AuthContainer>\r\n          <TextInput\r\n            title=\"Nombre\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"name\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*El Nombre es obligatorio*\",\r\n              },\r\n              pattern: {\r\n                value: /^[a-zA-Z\\s]*$/,\r\n                message: \"*El Nombre solo puede tener letras*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.name?.message}\r\n          />\r\n          <TextInput\r\n            title=\"Apellido\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"lastName\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*El Apellido es obligatorio*\",\r\n              },\r\n              pattern: {\r\n                value: /^[a-zA-Z\\s]*$/,\r\n                message: \"*El Apellido solo puede tener letras*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.lastName?.message}\r\n          />\r\n          <TextInput\r\n            title=\"Identificacion\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"idCard\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*La Cédula es obligatoria*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.idCard?.message}\r\n          />\r\n          <TextInput\r\n            title=\"Correo Electrónico\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"email\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*El Correo Electrónico es obligatorio*\",\r\n              },\r\n              pattern: {\r\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                message: \"*El Correo Electrónico debe tener un formato válido*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.email?.message}\r\n          />\r\n          <TextInput\r\n            title=\"Contraseña\"\r\n            control={control}\r\n            isPassword={true}\r\n            name=\"password\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*La Contraseña es obligatoria*\",\r\n              },\r\n              minLength: {\r\n                value: 8,\r\n                message: \"*La Contraseña debe tener 8 caracteres mínimo*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.password?.message}\r\n          />\r\n          <TextInput\r\n            title=\"Dirección\"\r\n            control={control}\r\n            isPassword={false}\r\n            name=\"direction\"\r\n            rules={{\r\n              required: {\r\n                value: true,\r\n                message: \"*La Dirección es obligatoria*\",\r\n              },\r\n            }}\r\n            defaultValue=\"\"\r\n            errorMessage={errors?.direction?.message}\r\n          />\r\n\r\n          <Button mode=\"contained\" onPress={handleSubmit(onSubmitRegister)}>\r\n            Registrar\r\n          </Button>\r\n        </AuthContainer>\r\n      </Background>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    marginVertical: 8,\r\n  },\r\n  title: {\r\n    marginBottom: 48,\r\n    textAlign: \"center\",\r\n  },\r\n  RegisterButton: {\r\n    marginVertical: 32,\r\n  },\r\n  closeIcon: {\r\n    position: \"absolute\",\r\n    top: 60,\r\n    right: 16,\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#000\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  scrollView: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n    backgroundColor: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}