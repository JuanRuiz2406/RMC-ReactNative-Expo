{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\RMC\\\\Front-End-RMC-Expo-v2\\\\components\\\\home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Carousel from \"./carousel\";\nimport { dummyData } from \"../data/data\";\nimport Donut from \"./donutChart\";\nimport { circleData } from \"../data/circleData\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(Carousel, {\n        data: dummyData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }), React.createElement(StatusBar, {\n        style: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          backgroundColor: 'transparent',\n          alignItems: 'center',\n          justifyContent: 'space-evenly',\n          flexWrap: 'wrap',\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, circleData.map(function (p, i) {\n        return React.createElement(Donut, {\n          key: i,\n          percentage: p.percentage,\n          color: p.color,\n          delay: 1000,\n          max: p.max,\n          radius: p.radius,\n          texto: p.texto,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 32\n          }\n        });\n      })));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport { Home as default };","map":{"version":3,"sources":["D:/xampp/htdocs/RMC/Front-End-RMC-Expo-v2/components/home.js"],"names":["StatusBar","React","Carousel","dummyData","Donut","circleData","Home","backgroundColor","alignItems","justifyContent","flexWrap","flexDirection","map","p","i","percentage","color","max","radius","texto","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAGA,OAAOC,QAAP;AACA,SAASC,SAAT;AACA,OAAOC,KAAP;AACA,SAASC,UAAT;;IAEqBC,I;;;;;;;;;;;;;6BACR;AAAA;;AACL,aACI,oBAAC,UAAD;AAAY,QAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHI,UAAAA,eAAe,EAAE,aADd;AAEHC,UAAAA,UAAU,EAAE,QAFT;AAGHC,UAAAA,cAAc,EAAE,cAHb;AAIHC,UAAAA,QAAQ,EAAE,MAJP;AAKHC,UAAAA,aAAa,EAAE;AALZ,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKN,UAAU,CAACO,GAAX,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,eAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,CAAZ;AAAe,UAAA,UAAU,EAAED,CAAC,CAACE,UAA7B;AAAyC,UAAA,KAAK,EAAEF,CAAC,CAACG,KAAlD;AAAyD,UAAA,KAAK,EAAE,IAAhE;AAAsE,UAAA,GAAG,EAAEH,CAAC,CAACI,GAA7E;AAAkF,UAAA,MAAM,EAAEJ,CAAC,CAACK,MAA5F;AAAoG,UAAA,KAAK,EAAEL,CAAC,CAACM,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFA,CARL,CAHJ,CADJ;AAmBH;;;;EArB6BlB,KAAK,CAACmB,S;;SAAnBd,I","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, ScrollView } from 'react-native';\r\n\r\nimport Carousel from './carousel'\r\nimport { dummyData } from '../data/data'\r\nimport Donut from './donutChart'\r\nimport { circleData } from '../data/circleData'\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n                <Carousel data={dummyData} />\r\n                <StatusBar style=\"auto\" />\r\n                <View\r\n                    style={{\r\n                        backgroundColor: 'transparent',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-evenly',\r\n                        flexWrap: 'wrap',\r\n                        flexDirection: 'row'\r\n                    }}>\r\n                    {circleData.map((p, i) => {\r\n                        return <Donut key={i} percentage={p.percentage} color={p.color} delay={1000} max={p.max} radius={p.radius} texto={p.texto} />\r\n                    })}\r\n                </View>\r\n\r\n            </ScrollView>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}