{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Front-End-RMC-Expo\\\\components\\\\screens\\\\FormReport.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useForm } from \"react-hook-form\";\nimport { TextInput, Picker } from \"../hook-form/index\";\nimport { reverseGeocodeAsync } from \"expo-location\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nexport default (function (_ref) {\n  var _errors$title, _errors$description;\n\n  var navigate = _ref.navigation.navigate;\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      cityName = _useState2[0],\n      setCityName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      latitude = _useState4[0],\n      setLatitude = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      longitude = _useState6[0],\n      setLongitude = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      token = _useState8[0],\n      setToken = _useState8[1];\n\n  var pickerOptions = [\"Público\", \"Privado\"];\n  useEffect(function () {\n    if (token === \"\") {\n      getToken();\n    } else {\n      updateCoordenadesAndCityName();\n    }\n  }, [latitude, longitude]);\n\n  var getToken = function getToken() {\n    var tokenInStorage;\n    return _regeneratorRuntime.async(function getToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n          case 2:\n            tokenInStorage = _context.sent;\n            setToken(tokenInStorage);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateCoordenadesAndCityName = function updateCoordenadesAndCityName() {\n    var locationData, locationResponse;\n    return _regeneratorRuntime.async(function updateCoordenadesAndCityName$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(reverseGeocodeAsync({\n              latitude: latitude,\n              longitude: longitude\n            }));\n\n          case 2:\n            locationData = _context2.sent;\n            locationResponse = locationData[0];\n            setCityName(locationResponse.city);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var coordenates = {\n    latitude: latitude,\n    longitude: longitude\n  };\n  var user = {\n    id: 1,\n    idCard: \"117990636\",\n    name: \"Juan\",\n    lastname: \"Ruiz\",\n    email: \"juan@rmc.com\",\n    password: \"$2a$10$gcYU0ucYM4vk3kG5LBKP8u9cm1Jg/x02SjP4DDtoY2AQvJpitwDtm\",\n    role: \"RMCTeam\",\n    direction: \"Casa\"\n  };\n\n  var onSubmitReport = function onSubmitReport(data) {\n    console.log(data);\n    reset({\n      title: \"\",\n      description: \"\"\n    });\n    fetch(\"http://192.168.0.2:8080/report/city/\" + String(cityName), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        title: data.title,\n        description: data.description,\n        state: \"Nuevo\",\n        privacy: data.privacy,\n        user: user,\n        coordenates: coordenates\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      Alert.alert(\"Reporte\", responseJson.message);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  console.log(errors);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    title: \"T\\xEDtulo\",\n    control: control,\n    isPassword: false,\n    name: \"title\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*El título es requerido*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$title = errors.title) == null ? void 0 : _errors$title.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    title: \"Descripci\\xF3n\",\n    control: control,\n    isPassword: false,\n    name: \"description\",\n    rules: {\n      required: {\n        value: true,\n        message: \"*Por favor describa su reporte*\"\n      }\n    },\n    defaultValue: \"\",\n    errorMessage: errors == null ? void 0 : (_errors$description = errors.description) == null ? void 0 : _errors$description.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker, {\n    title: \"Privacidad\",\n    control: control,\n    name: \"privacy\",\n    error: errors.privacy,\n    errorMessage: \"*Selecciona alguna opci\\xF3n*\",\n    pickerOptions: pickerOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.orange],\n    onPress: function onPress() {\n      return navigate(\"Mapa\", {\n        setLatitude: setLatitude,\n        setLongitude: setLongitude\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"*Seleccionar Ubicaci\\xF3n*\")), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.orange],\n    onPress: function onPress() {\n      return navigate(\"Cámara\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Tomar Foto\")), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.orange],\n    onPress: function onPress() {\n      return navigate(\"Seleccionar Fotos\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Seleccionar Fotos\")), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.green],\n    onPress: handleSubmit(onSubmitReport),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Reportar\"))));\n});\nvar styles = StyleSheet.create({\n  textPhoto: {\n    margin: 20,\n    marginTop: 25,\n    marginLeft: 40,\n    fontSize: 18\n  },\n  green: {\n    backgroundColor: \"#3CBA69\"\n  },\n  orange: {\n    backgroundColor: \"#F8A513\"\n  },\n  button: {\n    padding: 7,\n    marginTop: 25,\n    marginLeft: 40,\n    marginRight: 40,\n    marginBottom: 50,\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: \"black\"\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  scrollView: {\n    width: Dimensions.get(\"window\").width\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/Front-End-RMC-Expo/components/screens/FormReport.js"],"names":["React","useState","useEffect","useForm","TextInput","Picker","reverseGeocodeAsync","AsyncStorage","navigate","navigation","handleSubmit","control","reset","errors","cityName","setCityName","latitude","setLatitude","longitude","setLongitude","token","setToken","pickerOptions","getToken","updateCoordenadesAndCityName","getItem","tokenInStorage","locationData","locationResponse","city","coordenates","user","id","idCard","name","lastname","email","password","role","direction","onSubmitReport","data","console","log","title","description","fetch","String","method","headers","Authorization","body","JSON","stringify","state","privacy","then","response","json","responseJson","Alert","alert","message","catch","error","styles","container","scrollView","required","value","button","orange","buttonText","green","StyleSheet","create","textPhoto","margin","marginTop","marginLeft","fontSize","backgroundColor","padding","marginRight","marginBottom","borderWidth","borderRadius","borderColor","textAlign","color","fontWeight","flex","width","Dimensions","get"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextInput, Picker } from \"../hook-form/index\";\r\nimport { reverseGeocodeAsync } from \"expo-location\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nexport default ({ navigation: { navigate } }) => {\r\n  const { handleSubmit, control, reset, errors } = useForm();\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(0);\r\n  const [longitude, setLongitude] = useState(0);\r\n  const [token, setToken] = useState(\"\");\r\n  const pickerOptions = [\"Público\", \"Privado\"];\r\n\r\n  useEffect(() => {\r\n    if (token === \"\") {\r\n      getToken();\r\n    } else {\r\n      updateCoordenadesAndCityName();\r\n    }\r\n  }, [latitude, longitude]);\r\n\r\n  const getToken = async () => {\r\n    const tokenInStorage = await AsyncStorage.getItem(\"userToken\");\r\n\r\n    setToken(tokenInStorage);\r\n  };\r\n\r\n  const updateCoordenadesAndCityName = async () => {\r\n    let locationData = await reverseGeocodeAsync({\r\n      latitude: latitude,\r\n      longitude: longitude,\r\n    });\r\n\r\n    let locationResponse = locationData[0];\r\n    setCityName(locationResponse.city);\r\n  };\r\n\r\n  const coordenates = {\r\n    latitude: latitude,\r\n    longitude: longitude,\r\n  };\r\n  const user = {\r\n    id: 1,\r\n    idCard: \"117990636\",\r\n    name: \"Juan\",\r\n    lastname: \"Ruiz\",\r\n    email: \"juan@rmc.com\",\r\n    password: \"$2a$10$gcYU0ucYM4vk3kG5LBKP8u9cm1Jg/x02SjP4DDtoY2AQvJpitwDtm\",\r\n    role: \"RMCTeam\",\r\n    direction: \"Casa\",\r\n  };\r\n\r\n  const onSubmitReport = (data) => {\r\n    console.log(data);\r\n\r\n    reset({\r\n      title: \"\",\r\n      description: \"\",\r\n    });\r\n\r\n    fetch(\"http://192.168.0.2:8080/report/city/\" + String(cityName), {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        title: data.title,\r\n        description: data.description,\r\n        state: \"Nuevo\",\r\n        privacy: data.privacy,\r\n        user: user,\r\n        coordenates: coordenates,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        Alert.alert(\"Reporte\", responseJson.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        <TextInput\r\n          title=\"Título\"\r\n          control={control}\r\n          isPassword={false}\r\n          name=\"title\"\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"*El título es requerido*\",\r\n            },\r\n          }}\r\n          defaultValue=\"\"\r\n          errorMessage={errors?.title?.message}\r\n        />\r\n\r\n        <TextInput\r\n          title=\"Descripción\"\r\n          control={control}\r\n          isPassword={false}\r\n          name=\"description\"\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"*Por favor describa su reporte*\",\r\n            },\r\n          }}\r\n          defaultValue=\"\"\r\n          errorMessage={errors?.description?.message}\r\n        />\r\n\r\n        <Picker\r\n          title=\"Privacidad\"\r\n          control={control}\r\n          name=\"privacy\"\r\n          error={errors.privacy}\r\n          errorMessage=\"*Selecciona alguna opción*\"\r\n          pickerOptions={pickerOptions}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.orange]}\r\n          onPress={() =>\r\n            navigate(\"Mapa\", {\r\n              setLatitude: setLatitude,\r\n              setLongitude: setLongitude,\r\n            })\r\n          }\r\n        >\r\n          <Text style={styles.buttonText}>*Seleccionar Ubicación*</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.orange]}\r\n          onPress={() => navigate(\"Cámara\")}\r\n        >\r\n          <Text style={styles.buttonText}>Tomar Foto</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.orange]}\r\n          onPress={() => navigate(\"Seleccionar Fotos\")}\r\n        >\r\n          <Text style={styles.buttonText}>Seleccionar Fotos</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={[styles.button, styles.green]}\r\n          onPress={handleSubmit(onSubmitReport)}\r\n        >\r\n          <Text style={styles.buttonText}>Reportar</Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  textPhoto: {\r\n    margin: 20,\r\n    marginTop: 25,\r\n    marginLeft: 40,\r\n    fontSize: 18,\r\n  },\r\n  green: {\r\n    backgroundColor: \"#3CBA69\",\r\n  },\r\n  orange: {\r\n    backgroundColor: \"#F8A513\",\r\n  },\r\n  button: {\r\n    padding: 7,\r\n    marginTop: 25,\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    marginBottom: 50,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    borderColor: \"black\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  scrollView: {\r\n    width: Dimensions.get(\"window\").width,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}